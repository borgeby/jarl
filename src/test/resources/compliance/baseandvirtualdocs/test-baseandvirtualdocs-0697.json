{
	"cases": [
		{
			"note": "baseandvirtualdocs/base/virtual: prefix",
			"query": "data.topdown.r = x",
			"modules": [
				"package enum_errors.a.b.c\n\np = x {\n  __local0__ = 1 / 0\n  x = __local0__\n}\n",
				"package topdown.virtual.constants\n\np = 1\n\nq = 2\n\nr = 1\n",
				"package partial.topdown\n\np[[\"c\", \"x\", 0, x41]] {\n  data.topdown.a.b.c.x[0] = x41\n}\n\np[[\"c\", \"x\", 1, x41]] {\n  data.topdown.a.b.c.x[1] = x41\n}\n\np[[\"c\", \"z\", \"a\", x41]] {\n  data.topdown.a.b.c.z.a = x41\n}\n\np[[\n  \"c\", \"p\", 0,\n  1,\n]]\n\np[[\n  \"c\", \"p\", 1,\n  2,\n]]\n\np[[\n  \"c\", \"q\", 0,\n  3,\n]]\n\np[[\n  \"c\", \"q\", 1,\n  4,\n]]\n\np[[\n  \"c\", \"r\",\n  \"a\", 1,\n]]\n\np[[\n  \"c\", \"r\",\n  \"b\", 2,\n]]\n\np[[\n  \"c\", \"s\", \"w\",\n  {\"f\": 10, \"g\": 9.9},\n]]\n\np[[\n  \"c\", \"undefined2\", \"p\",\n  true,\n]] {\n  input.foo\n}\n\np[[\"c\", \"x\", 0, x41]] {\n  data.topdown.a.b.c.x[0] = x41\n}\n\np[[\"c\", \"x\", 1, x41]] {\n  data.topdown.a.b.c.x[1] = x41\n}\n\np[[\"c\", \"z\", \"a\", x41]] {\n  data.topdown.a.b.c.z.a = x41\n}\n\np[[\n  \"c\", \"p\", 0,\n  1,\n]]\n\np[[\n  \"c\", \"p\", 1,\n  2,\n]]\n\np[[\n  \"c\", \"q\", 0,\n  3,\n]]\n\np[[\n  \"c\", \"q\", 1,\n  4,\n]]\n\np[[\n  \"c\", \"r\",\n  \"a\", 1,\n]]\n\np[[\n  \"c\", \"r\",\n  \"b\", 2,\n]]\n\np[[\n  \"c\", \"s\", \"w\",\n  {\"f\": 10, \"g\": 9.9},\n]]\n\np[[\n  \"c\", \"undefined2\", \"p\",\n  true,\n]] {\n  input.foo\n}\n",
				"package topdown.missing.input.value\n\np = __local7__ {\n  true\n  __local7__ = input.deadbeef\n}\n",
				"package topdown.conflicts\n\nk = \"bar\"\n",
				"package topdown.g.h\n\np {\n  false\n}\n",
				"package topdown.a.b.c\n\np = [1, 2]\n\nq = [3, 4]\n\nr[\"a\"] = 1\n\nr[\"b\"] = 2\n",
				"package topdown.a.b.c.undefined2\n\np {\n  input.foo\n}\n",
				"package topdown.a.b.c.s\n\nw = {\"f\": 10, \"g\": 9.9}\n",
				"package topdown\n\np[[x1, x2, x3, x4]] {\n  data.topdown.a.b[x1][x2][x3] = x4\n}\n\nq[[x1, x2, x3]] {\n  data.topdown.a.b[x1][x2][0] = x3\n}\n\nr[[x1, x2]] {\n  data.topdown.a.b[x1] = x2\n}\n\ns = __local1__ {\n  true\n  __local1__ = data.topdown.no\n}\n\nt = __local2__ {\n  true\n  __local2__ = data.topdown.a.b.c.undefined1\n}\n\nu = __local3__ {\n  true\n  __local3__ = data.topdown.missing.input.value\n}\n\nv = __local4__ {\n  true\n  __local4__ = data.topdown.g\n}\n\nw = __local5__ {\n  true\n  __local5__ = data.topdown.set\n}\n\niterate_ground[x] {\n  data.topdown.virtual.constants[x] = 1\n}\n",
				"package topdown_test_partial\n\n__result__ = _result {\n  _result = {[\n    \"c\", \"p\",\n    1,\n  ], [\n    \"c\", \"q\",\n    3,\n  ], [\"c\", \"x\", 100]}\n}\n",
				"package topdown.a.b.c.undefined1\n\np {\n  false\n}\n\np {\n  false\n}\n\nq {\n  false\n}\n",
				"package topdown.no.base.doc\n\np = true\n",
				"package topdown.set\n\nv[__local6__] {\n  true\n  __local6__ = data.topdown.set.u[_]\n}\n",
				"package enum_errors.caller\n\np[x] = y {\n  data.enum_errors.a[x] = y\n}\n",
				"package topdown.a.b.c.empty\n"
			],
			"data": {
				"topdown": {
					"a": {
						"b": {
							"c": {
								"x": [
									100,
									200
								],
								"y": false,
								"z": {
									"a": "b"
								}
							}
						}
					},
					"conflicts": {
						"k": "foo"
					},
					"g": {
						"h": {
							"k": [
								1,
								2,
								3
							]
						}
					},
					"set": {
						"u": [
							1,
							2,
							3,
							4
						]
					}
				}
			},
			"input_term": "{}",
			"want_result": [
				{
					"x": [
						[
							"c",
							{
								"empty": {},
								"p": [
									1,
									2
								],
								"q": [
									3,
									4
								],
								"r": {
									"a": 1,
									"b": 2
								},
								"s": {
									"w": {
										"f": 10,
										"g": 9.9
									}
								},
								"undefined1": {},
								"undefined2": {},
								"x": [
									100,
									200
								],
								"y": false,
								"z": {
									"a": "b"
								}
							}
						]
					]
				}
			],
			"sort_bindings": true,
			"entrypoints": [
				"enum_errors/a/b/c",
				"topdown/virtual/constants",
				"topdown_test_partial",
				"topdown/a/b/c/undefined1",
				"topdown/no/base/doc",
				"topdown/set",
				"enum_errors/caller",
				"topdown/a/b/c/empty",
				"partial/topdown",
				"topdown/missing/input/value",
				"topdown/conflicts",
				"topdown/g/h",
				"topdown/a/b/c",
				"topdown/a/b/c/undefined2",
				"topdown/a/b/c/s",
				"topdown"
			],
			"plan": null,
			"want_plan_result": null
		}
	]
}