name: Check Code

on:
  push:
  workflow_dispatch:

jobs:
  clj-kondo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-lint-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-lint-
    - run: lein clj-kondo
      working-directory: ./core

  eastwood:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-lint-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-lint-
    - run: lein eastwood
      working-directory: ./core

  kibit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-lint-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-lint-
    - run: lein kibit
      working-directory: ./core

  test-clj:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-test-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-test-
    - run: lein gen-compliance :clj
      working-directory: ./core
    - run: lein test
      working-directory: ./core

  test-cljs-unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-test-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-test-
    # Hack allowing compliance_tests.cljs to compile without generated tests
    - run: |
        mkdir -p src/test/cljs/compliance/generated
        echo "(ns test.compliance.generated.tests)" > src/test/cljs/compliance/generated/tests.cljs
      working-directory: ./core
    - run: npm install
      working-directory: ./core
    - run: lein cljs-build-test
      working-directory: ./core
    - run: node target/cljs-test.js
      working-directory: ./core

  test-cljs-compliance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          ~/.deps.clj
        key: cljdeps-test-${{ hashFiles('**/project.clj') }}
        restore-keys: cljdeps-test-
    - run: lein gen-compliance :cljs
      working-directory: ./core
    - run: npm install
      working-directory: ./core
    - run: lein cljs-build-compliance
      working-directory: ./core
    - run: node target/cljs-compliance.js
      working-directory: ./core

  test-java:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'
    - run: ./gradlew test
      working-directory: ./api

  cloverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'
    - run: lein gen-compliance :clj
      working-directory: ./core
    - run: lein cloverage --codecov
      working-directory: ./core
    - uses: codecov/codecov-action@v3
      with:
        file: core/target/coverage/codecov.json
